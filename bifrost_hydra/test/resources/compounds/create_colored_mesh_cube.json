{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "Hydra::Testing::create_colored_mesh_cube",
            "uriImported": "file:///create_colored_mesh_cube.json",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "enable_color"
                                                },
                                                {
                                                    "metaName": "length"
                                                },
                                                {
                                                    "metaName": "width"
                                                },
                                                {
                                                    "metaName": "height"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "665.366 620.103"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "mesh"
                                                }
                                            ]
                                        },
                                        {
                                            "metaName": "DisplayMode",
                                            "metaType": "string",
                                            "metaValue": "2"
                                        },
                                        {
                                            "metaName": "LayoutPos",
                                            "metaType": "string",
                                            "metaValue": "2321.92 831.329"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Core::Logic,if"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Hydra::Testing,create_mesh_cube_as_components"
                },
                {
                    "metaName": "_recentNode_",
                    "metaType": "string",
                    "metaValue": "BifrostGraph,Hydra::Testing,create_colored_mesh_cube"
                },
                {
                    "metaName": "ViewportRect",
                    "metaType": "string",
                    "metaValue": "584 220.1 2153 1505.8"
                },
                {
                    "metaName": "DisplayMode",
                    "metaType": "string",
                    "metaValue": "2"
                },
                {
                    "metaName": "LayoutPos",
                    "metaType": "string",
                    "metaValue": "-132.621 -118.25"
                }
            ],
            "ports": [
                {
                    "portName": "mesh",
                    "portDirection": "output",
                    "portType": "Object"
                },
                {
                    "portName": "enable_color",
                    "portDirection": "input",
                    "portType": "bool",
                    "portDefault": "true"
                },
                {
                    "portName": "length",
                    "portDirection": "input",
                    "portType": "float",
                    "portDefault": "1f"
                },
                {
                    "portName": "width",
                    "portDirection": "input",
                    "portType": "float",
                    "portDefault": "1f"
                },
                {
                    "portName": "height",
                    "portDirection": "input",
                    "portType": "float",
                    "portDefault": "1f"
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "assign_diagnostic_material",
                    "nodeType": "Diagnostic::Display::assign_diagnostic_material",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1726.67 773.569"
                        }
                    ]
                },
                {
                    "nodeName": "change_range",
                    "nodeType": "Core::Math::change_range",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "1"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1462.77 1012.13"
                        }
                    ]
                },
                {
                    "nodeName": "create_mesh_cube7",
                    "nodeType": "Modeling::Primitive::create_mesh_cube",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "PortExpandedState",
                            "metadata": [
                                {
                                    "metaName": "Dimensions",
                                    "metaType": "string",
                                    "metaValue": "1"
                                },
                                {
                                    "metaName": "Transform",
                                    "metaType": "string",
                                    "metaValue": "0"
                                }
                            ]
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "944.389 721.034"
                        }
                    ]
                },
                {
                    "nodeName": "get_point_position",
                    "nodeType": "Geometry::Properties::get_point_position",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "1201.3 892.405"
                        }
                    ]
                },
                {
                    "nodeName": "if",
                    "nodeType": "Core::Logic::if",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "2021.54 598.265"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": "create_mesh_cube7.cube_mesh",
                    "target": "assign_diagnostic_material.geometry"
                },
                {
                    "source": "get_point_position.point_position",
                    "target": "change_range.value"
                },
                {
                    "source": "create_mesh_cube7.cube_mesh",
                    "target": "get_point_position.geometry"
                },
                {
                    "source": ".length",
                    "target": "create_mesh_cube7.length"
                },
                {
                    "source": ".width",
                    "target": "create_mesh_cube7.width"
                },
                {
                    "source": ".height",
                    "target": "create_mesh_cube7.height"
                },
                {
                    "source": ".enable_color",
                    "target": "if.condition"
                },
                {
                    "source": "assign_diagnostic_material.geometry_with_material",
                    "target": "if.true_case"
                },
                {
                    "source": "create_mesh_cube7.cube_mesh",
                    "target": "if.false_case"
                },
                {
                    "source": "if.output",
                    "target": ".mesh"
                },
                {
                    "source": "change_range.result",
                    "target": "assign_diagnostic_material.emission_color"
                }
            ],
            "values": [
                {
                    "valueName": "assign_diagnostic_material.specular",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "assign_diagnostic_material.emission",
                    "valueType": "float",
                    "value": "0.800000012f"
                },
                {
                    "valueName": "change_range.from_start",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "-0.5f",
                        "y": "-0.5f",
                        "z": "-0.5f"
                    }
                },
                {
                    "valueName": "change_range.from_end",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0.5f",
                        "y": "0.5f",
                        "z": "0.5f"
                    }
                },
                {
                    "valueName": "change_range.to_end",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "1f",
                        "y": "1f",
                        "z": "1f"
                    }
                },
                {
                    "valueName": "change_range.clamp",
                    "valueType": "bool",
                    "value": "true"
                },
                {
                    "valueName": "create_mesh_cube7.length",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_cube7.width",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_cube7.height",
                    "valueType": "float",
                    "value": "1f"
                },
                {
                    "valueName": "create_mesh_cube7.position",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "0f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "create_mesh_cube7.up_axis",
                    "valueType": "Math::float3",
                    "value": {
                        "x": "0f",
                        "y": "1f",
                        "z": "0f"
                    }
                },
                {
                    "valueName": "create_mesh_cube7.base_to_pivot",
                    "valueType": "bool",
                    "value": "false"
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "input"
                },
                {
                    "name": "output"
                }
            ]
        }
    ]
}
