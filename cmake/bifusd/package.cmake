#-
#*****************************************************************************
# Copyright 2022 Autodesk, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#*****************************************************************************
#+

if(bifusd_package_included)
    return()
endif()
set(bifusd_package_included true)

if(CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)
    #==============================================================================
    # CPack configuration - only if not already included...
    #==============================================================================

    # We use ZIP files on all platforms as this format is better supported by
    # Artifactory. This also matches the preference of the Maya team.
    set(CPACK_GENERATOR "ZIP")

    set(CPACK_PACKAGE_NAME "${BIFUSD_PACKAGE_NAME}")
    set(CPACK_PACKAGE_VERSION "${BIFUSD_MAJOR_VERSION}.${BIFUSD_MINOR_VERSION}.${BIFUSD_PATCH_LEVEL}")

    set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CMAKE_SYSTEM_NAME}-${CMAKE_BUILD_TYPE}")
    set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY 0)

    set(CPACK_PACKAGE_DIRECTORY "${CMAKE_INSTALL_PREFIX}")

    include(CPack)

    #==============================================================================
    # Bifusd install directories
    #==============================================================================

    # Avoid noisy install messages
    set(CMAKE_INSTALL_MESSAGE "NEVER")

    set(BIFUSD_PACKAGE_VERSION          "${BIFUSD_MAJOR_VERSION}.${BIFUSD_MINOR_VERSION}.${BIFUSD_PATCH_LEVEL}")

    # The top package directory is made part of CMAKE_INSTALL_PREFIX. This is to
    # ensure that the exported CMake package is relative to that top package
    # directory. This allows us to later strip-off or rename that directory after
    # installation without breaking the exported CMake package.
    #
    # FIXME: This is a bit hacky... A better solution would be for build.py to read
    # the version file and set the CMAKE_INSTALL_PREFIX path correctly!
    if (NOT CMAKE_INSTALL_PREFIX MATCHES "/${BIFUSD_PACKAGE_NAME}-${BIFUSD_PACKAGE_VERSION}$")
        set(CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}/${BIFUSD_PACKAGE_NAME}-${BIFUSD_PACKAGE_VERSION}"
            CACHE PATH "Install path prefix, prepended onto install directories." FORCE)
    endif()

endif()

#==============================================================================
# Generation of distributable debugging symbols on OS X
#==============================================================================

if(BIFUSD_IS_OSX)
    # Utility for generating distributable debugging symbols.
    find_program(BIFUSD_OSX_DSYMUTIL dsymutil "/usr/bin")

    set(BIFUSD_OSX_GENERATE_DSYM ON
        CACHE BOOL "Should the debugging symbols be generated by the 'all' target.")

    # Custom target for distributable debugging symbols.
    if( NOT TARGET bifusd-dsym )
        if (BIFUSD_OSX_GENERATE_DSYM)
            add_custom_target(bifusd-dsym ALL)
        else()
            add_custom_target(bifusd-dsym)
        endif()
    endif()

    # Custom target for building separate debugging symbols for
    # tests. Useful when running valgrind to accurate stack traces.
    if( NOT TARGET bifusd-dsymtest)
        add_custom_target(bifusd-dsymtest)
    endif()
endif()

if(BIFUSD_IS_WINDOWS)
    # Utility for generating distributable debugging symbols.
    # Same location as the linker
    get_filename_component(BIFUSD_LINKER_PATH ${CMAKE_LINKER} DIRECTORY)
    set(BIFUSD_WINDOWS_MSPDBCMF "${BIFUSD_LINKER_PATH}/mspdbcmf.exe")
endif()
